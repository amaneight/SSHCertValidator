# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: CertValidate.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='CertValidate.proto',
  package='certvalidate',
  serialized_pb=_b('\n\x12\x43\x65rtValidate.proto\x12\x0c\x63\x65rtvalidate\"\xec\x05\n\x0f\x43\x65rtificate_Cfg\x12\x10\n\x08\x63\x65rt_age\x18\x01 \x02(\x05\x12\x18\n\x10trust_store_path\x18\x02 \x02(\t\x12\x35\n\x06PubKey\x18\x03 \x03(\x0b\x32%.certvalidate.Certificate_Cfg.pub_key\x12\x39\n\x08KeyUsage\x18\x04 \x03(\x0b\x32\'.certvalidate.Certificate_Cfg.key_usage\x12\x45\n\x0b\x45xtKeyUsage\x18\x05 \x03(\x0b\x32\x30.certvalidate.Certificate_Cfg.extended_key_usage\x12<\n\x08SignAlgo\x18\x06 \x03(\x0b\x32*.certvalidate.Certificate_Cfg.signing_algo\x12\x37\n\x05\x43heck\x18\x07 \x03(\x0b\x32(.certvalidate.Certificate_Cfg.cert_check\x12\x1b\n\x13preferred_mechanism\x18\x08 \x02(\t\x12\x13\n\x0b\x66\x61il_status\x18\t \x02(\x08\x1a/\n\ncert_check\x12\x12\n\ncheck_name\x18\x01 \x02(\t\x12\r\n\x05\x63type\x18\x02 \x02(\t\x1a:\n\x07pub_key\x12\x0e\n\x06key_id\x18\x01 \x02(\x05\x12\x11\n\talgo_name\x18\x02 \x02(\t\x12\x0c\n\x04\x62its\x18\x03 \x02(\x05\x1a-\n\tkey_usage\x12\x0e\n\x06key_id\x18\x01 \x02(\x05\x12\x10\n\x08key_name\x18\x02 \x02(\t\x1aO\n\x12\x65xtended_key_usage\x12\x15\n\rdotted_string\x18\x01 \x02(\t\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x14\n\x0c\x64isplay_name\x18\x03 \x02(\t\x1a!\n\x0csigning_algo\x12\x11\n\talgo_name\x18\x01 \x02(\t\";\n\ncheck_type\x12\r\n\tMANDATORY\x10\x00\x12\x0c\n\x08OPTIONAL\x10\x01\x12\x10\n\x0cNOT_REQUIRED\x10\x02')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_CERTIFICATE_CFG_CHECK_TYPE = _descriptor.EnumDescriptor(
  name='check_type',
  full_name='certvalidate.Certificate_Cfg.check_type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MANDATORY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPTIONAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_REQUIRED', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=726,
  serialized_end=785,
)
_sym_db.RegisterEnumDescriptor(_CERTIFICATE_CFG_CHECK_TYPE)


_CERTIFICATE_CFG_CERT_CHECK = _descriptor.Descriptor(
  name='cert_check',
  full_name='certvalidate.Certificate_Cfg.cert_check',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='check_name', full_name='certvalidate.Certificate_Cfg.cert_check.check_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ctype', full_name='certvalidate.Certificate_Cfg.cert_check.ctype', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=454,
  serialized_end=501,
)

_CERTIFICATE_CFG_PUB_KEY = _descriptor.Descriptor(
  name='pub_key',
  full_name='certvalidate.Certificate_Cfg.pub_key',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_id', full_name='certvalidate.Certificate_Cfg.pub_key.key_id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='algo_name', full_name='certvalidate.Certificate_Cfg.pub_key.algo_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bits', full_name='certvalidate.Certificate_Cfg.pub_key.bits', index=2,
      number=3, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=503,
  serialized_end=561,
)

_CERTIFICATE_CFG_KEY_USAGE = _descriptor.Descriptor(
  name='key_usage',
  full_name='certvalidate.Certificate_Cfg.key_usage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_id', full_name='certvalidate.Certificate_Cfg.key_usage.key_id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key_name', full_name='certvalidate.Certificate_Cfg.key_usage.key_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=563,
  serialized_end=608,
)

_CERTIFICATE_CFG_EXTENDED_KEY_USAGE = _descriptor.Descriptor(
  name='extended_key_usage',
  full_name='certvalidate.Certificate_Cfg.extended_key_usage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dotted_string', full_name='certvalidate.Certificate_Cfg.extended_key_usage.dotted_string', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='certvalidate.Certificate_Cfg.extended_key_usage.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='certvalidate.Certificate_Cfg.extended_key_usage.display_name', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=610,
  serialized_end=689,
)

_CERTIFICATE_CFG_SIGNING_ALGO = _descriptor.Descriptor(
  name='signing_algo',
  full_name='certvalidate.Certificate_Cfg.signing_algo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='algo_name', full_name='certvalidate.Certificate_Cfg.signing_algo.algo_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=691,
  serialized_end=724,
)

_CERTIFICATE_CFG = _descriptor.Descriptor(
  name='Certificate_Cfg',
  full_name='certvalidate.Certificate_Cfg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cert_age', full_name='certvalidate.Certificate_Cfg.cert_age', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trust_store_path', full_name='certvalidate.Certificate_Cfg.trust_store_path', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='PubKey', full_name='certvalidate.Certificate_Cfg.PubKey', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='KeyUsage', full_name='certvalidate.Certificate_Cfg.KeyUsage', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ExtKeyUsage', full_name='certvalidate.Certificate_Cfg.ExtKeyUsage', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SignAlgo', full_name='certvalidate.Certificate_Cfg.SignAlgo', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Check', full_name='certvalidate.Certificate_Cfg.Check', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='preferred_mechanism', full_name='certvalidate.Certificate_Cfg.preferred_mechanism', index=7,
      number=8, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fail_status', full_name='certvalidate.Certificate_Cfg.fail_status', index=8,
      number=9, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CERTIFICATE_CFG_CERT_CHECK, _CERTIFICATE_CFG_PUB_KEY, _CERTIFICATE_CFG_KEY_USAGE, _CERTIFICATE_CFG_EXTENDED_KEY_USAGE, _CERTIFICATE_CFG_SIGNING_ALGO, ],
  enum_types=[
    _CERTIFICATE_CFG_CHECK_TYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=37,
  serialized_end=785,
)

_CERTIFICATE_CFG_CERT_CHECK.containing_type = _CERTIFICATE_CFG
_CERTIFICATE_CFG_PUB_KEY.containing_type = _CERTIFICATE_CFG
_CERTIFICATE_CFG_KEY_USAGE.containing_type = _CERTIFICATE_CFG
_CERTIFICATE_CFG_EXTENDED_KEY_USAGE.containing_type = _CERTIFICATE_CFG
_CERTIFICATE_CFG_SIGNING_ALGO.containing_type = _CERTIFICATE_CFG
_CERTIFICATE_CFG.fields_by_name['PubKey'].message_type = _CERTIFICATE_CFG_PUB_KEY
_CERTIFICATE_CFG.fields_by_name['KeyUsage'].message_type = _CERTIFICATE_CFG_KEY_USAGE
_CERTIFICATE_CFG.fields_by_name['ExtKeyUsage'].message_type = _CERTIFICATE_CFG_EXTENDED_KEY_USAGE
_CERTIFICATE_CFG.fields_by_name['SignAlgo'].message_type = _CERTIFICATE_CFG_SIGNING_ALGO
_CERTIFICATE_CFG.fields_by_name['Check'].message_type = _CERTIFICATE_CFG_CERT_CHECK
_CERTIFICATE_CFG_CHECK_TYPE.containing_type = _CERTIFICATE_CFG
DESCRIPTOR.message_types_by_name['Certificate_Cfg'] = _CERTIFICATE_CFG

Certificate_Cfg = _reflection.GeneratedProtocolMessageType('Certificate_Cfg', (_message.Message,), dict(

  cert_check = _reflection.GeneratedProtocolMessageType('cert_check', (_message.Message,), dict(
    DESCRIPTOR = _CERTIFICATE_CFG_CERT_CHECK,
    __module__ = 'CertValidate_pb2'
    # @@protoc_insertion_point(class_scope:certvalidate.Certificate_Cfg.cert_check)
    ))
  ,

  pub_key = _reflection.GeneratedProtocolMessageType('pub_key', (_message.Message,), dict(
    DESCRIPTOR = _CERTIFICATE_CFG_PUB_KEY,
    __module__ = 'CertValidate_pb2'
    # @@protoc_insertion_point(class_scope:certvalidate.Certificate_Cfg.pub_key)
    ))
  ,

  key_usage = _reflection.GeneratedProtocolMessageType('key_usage', (_message.Message,), dict(
    DESCRIPTOR = _CERTIFICATE_CFG_KEY_USAGE,
    __module__ = 'CertValidate_pb2'
    # @@protoc_insertion_point(class_scope:certvalidate.Certificate_Cfg.key_usage)
    ))
  ,

  extended_key_usage = _reflection.GeneratedProtocolMessageType('extended_key_usage', (_message.Message,), dict(
    DESCRIPTOR = _CERTIFICATE_CFG_EXTENDED_KEY_USAGE,
    __module__ = 'CertValidate_pb2'
    # @@protoc_insertion_point(class_scope:certvalidate.Certificate_Cfg.extended_key_usage)
    ))
  ,

  signing_algo = _reflection.GeneratedProtocolMessageType('signing_algo', (_message.Message,), dict(
    DESCRIPTOR = _CERTIFICATE_CFG_SIGNING_ALGO,
    __module__ = 'CertValidate_pb2'
    # @@protoc_insertion_point(class_scope:certvalidate.Certificate_Cfg.signing_algo)
    ))
  ,
  DESCRIPTOR = _CERTIFICATE_CFG,
  __module__ = 'CertValidate_pb2'
  # @@protoc_insertion_point(class_scope:certvalidate.Certificate_Cfg)
  ))
_sym_db.RegisterMessage(Certificate_Cfg)
_sym_db.RegisterMessage(Certificate_Cfg.cert_check)
_sym_db.RegisterMessage(Certificate_Cfg.pub_key)
_sym_db.RegisterMessage(Certificate_Cfg.key_usage)
_sym_db.RegisterMessage(Certificate_Cfg.extended_key_usage)
_sym_db.RegisterMessage(Certificate_Cfg.signing_algo)


# @@protoc_insertion_point(module_scope)
